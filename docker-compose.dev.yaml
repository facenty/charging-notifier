version: '3.7'

services:
  backend:
    build:
      context: ./backend/
      target: development-build-stage
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - 'DB_HOST=postgres'
      - 'DB_NAME=database'
      - 'DB_USER=facenty'
      - 'DB_PASS=$$up3r$$3cr3tP@$$$$w0rd'
    ports:
      - 8080:8080
    volumes:
      - ./backend:/app
    restart: 'unless-stopped'
    networks:
      - server-network
    links:
      - postgres
    depends_on:
      - postgres

  postgres:
    image: postgres:13-alpine
    environment:
      - 'POSTGRES_DB=database'
      - 'POSTGRES_USER=facenty'
      - 'POSTGRES_PASSWORD=$$up3r$$3cr3tP@$$$$w0rd'
    restart: always
    # volumes:
    #   - ./data:/var/lib/postgresql/data
    # ports:
    # - "5432:5432"
    networks:
      - server-network

  frontend:
    build:
      context: ./frontend/
      target: node-development-build-stage
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend/:/app
    restart: 'unless-stopped'
    networks:
      - server-network

  proxy:
    build:
      context: ./frontend/
      target: nginx-development-build-stage
      dockerfile: Dockerfile
    container_name: proxy
    ports:
      - '80:80'
    volumes:
      - ./frontend/nginx/common/default.conf:/etc/nginx/nginx.conf
      - ./frontend/nginx/development/frontend-server.conf:/etc/nginx/frontend-server.conf
      - ./frontend/nginx/development/frontend-http.conf:/etc/nginx/frontend-http.conf
    restart: 'unless-stopped'
    networks:
      - server-network
    links:
      - backend
      - frontend
    depends_on:
      - backend
      - frontend

networks:
  server-network:
    driver: bridge

volumes:
  data:
    driver: local
